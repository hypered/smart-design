doctype html
html(dir="ltr", lang="en")
    head
        meta(charset="utf-8")
        meta(name="viewport" content="width=device-width, initial-scale=1")
        link(rel="stylesheet", href="/css/struct/reset.css")
        link(rel="stylesheet", href="/css/struct/ibm-plex.css")
        style.
          *, *:before, *:after {border-sizing: border-box;}
          html {font-size: 62.5%;}
          body {font-size: 1.6rem;}
          body {font-family: 'IBM Plex Sans';}
          /* Generated by hypered-design. */
          :root {
            --step-b-5: clamp(3.9813rem, 3.2196rem + 2.3802vw, 6.7424rem);
            --step-b-4: clamp(3.3178rem, 2.8380rem + 1.4992vw, 5.0568rem);
            --step-b-3: clamp(2.7648rem, 2.4813rem + 0.8860vw, 3.7926rem);
            --step-b-2: clamp(2.3040rem, 2.1549rem + 0.4659vw, 2.8444rem);
            --step-b-1: clamp(1.9200rem, 1.8611rem + 0.1839vw, 2.1333rem);
            --step-b-0: clamp(1.6000rem, 1.6000rem + 0.0000vw, 1.6000rem);
            --step-b--1: clamp(1.3333rem, 1.3701rem + -0.1149vw, 1.2000rem);
            --step-b--2: clamp(1.1111rem, 1.1693rem + -0.1820vw, 0.9000rem);
          }

          :root {
            --step-c-5: clamp(3.9813rem, 2.7546rem + 3.8333vw, 8.4280rem);
            --step-c-4: clamp(3.3178rem, 2.4893rem + 2.5890vw, 6.3210rem);
            --step-c-3: clamp(2.7648rem, 2.2197rem + 1.7034vw, 4.7407rem);
            --step-c-2: clamp(2.3040rem, 1.9587rem + 1.0789vw, 3.5556rem);
            --step-c-1: clamp(1.9200rem, 1.7140rem + 0.6437vw, 2.6667rem);
            --step-c-0: clamp(1.6000rem, 1.4897rem + 0.3448vw, 2.0000rem);
            --step-c--1: clamp(1.3333rem, 1.2874rem + 0.1437vw, 1.5000rem);
            --step-c--2: clamp(1.1111rem, 1.1073rem + 0.0120vw, 1.1250rem);
          }

          :root {
            --space-3xs: clamp(0.4000rem, 0.3724rem + 0.0862vw, 0.5000rem);
            --space-2xs: clamp(0.8000rem, 0.7448rem + 0.1724vw, 1.0000rem);
            --space-xs: clamp(1.2000rem, 1.1172rem + 0.2586vw, 1.5000rem);
            --space-s: clamp(1.6000rem, 1.4897rem + 0.3448vw, 2.0000rem);
            --space-m: clamp(2.4000rem, 2.2345rem + 0.5172vw, 3.0000rem);
            --space-l: clamp(3.2000rem, 2.9793rem + 0.6897vw, 4.0000rem);
            --space-xl: clamp(4.8000rem, 4.4690rem + 1.0345vw, 6.0000rem);
            --space-2xl: clamp(6.4000rem, 5.9586rem + 1.3793vw, 8.0000rem);
            --space-3xl: clamp(9.6000rem, 8.9379rem + 2.0690vw, 12.0000rem);
          }

          :root {
            --space-m-l: clamp(2.4000rem, 1.9586rem + 1.3793vw, 4.0000rem);
          }

          :root {
            --grid-max-width: 148rem;
            --grid-gutter: var(--space-m-l);
            --grid-columns: 12;
          }

          .u-container {
            min-width: calc(24rem - 2 * var(--grid-gutter));
            max-width: var(--grid-max-width);
            padding-inline: var(--grid-gutter);
            margin-inline: auto;
          }

          .u-grid {
            display: grid;
            gap: var(--grid-gutter);
            grid-template-columns: repeat(12, 1fr);
          }

          /* */
          h1, h2, h3, h4 {font-weight: 600;}
          h1 {letter-spacing: -0.24rem;}
          h2 {letter-spacing: -0.16rem;}
          h3 {letter-spacing: -0.08rem;}
          h1 {font-size: var(--step-c-4);}
          h2 {font-size: var(--step-c-3);}
          h3 {font-size: var(--step-c-2);}
          h4 {font-size: var(--step-c-1);}
          p {font-size: var(--step-c-0); line-height: 1.5em;}
          .limit-p p {max-width: 42em;}
          a {color: blue;}
          hr {
            font-size: var(--step-c-4); /* like h1, for flow spacing */
            color: black;
            background-color: black;
            width: 12.8rem;
            border: none;
            height: .2rem;
            margin: 3.4rem 0;
          }
          .c-content h1 {font-size: var(--step-b-4);}
          .c-content h2 {font-size: var(--step-b-3);}
          .c-content h3 {font-size: var(--step-b-2);}
          .c-content h4 {font-size: var(--step-b-1);}
          .c-content p {font-size: var(--step-b-0); line-height: 1.5em;}
          .u-step-b-5 {font-size: var(--step-b-5);}
          .u-step-b-4 {font-size: var(--step-b-4);}
          .u-step-b-3 {font-size: var(--step-b-3);}
          .u-step-b-2 {font-size: var(--step-b-2);}
          .u-step-b-1 {font-size: var(--step-b-1);}
          .u-step-b-0 {font-size: var(--step-b-0);}
          .u-step-b--1 {font-size: var(--step-b--1);}
          .u-step-b--2 {font-size: var(--step-b--2);}
          .u-step-c-5 {font-size: var(--step-c-5);}
          .u-step-c-4 {font-size: var(--step-c-4);}
          .u-step-c-3 {font-size: var(--step-c-3);}
          .u-step-c-2 {font-size: var(--step-c-2);}
          .u-step-c-1 {font-size: var(--step-c-1);}
          .u-step-c-0 {font-size: var(--step-c-0);}
          .u-step-c--1 {font-size: var(--step-c--1);}
          .u-step-c--2 {font-size: var(--step-c--2);}
          .label-step {font-size: 1.4rem; color: grey;}
          .debug-gap-color {background: #eed9eb;}
          .u-grid--full-height {
            grid-auto-rows: 100vh;
          }
          .debug-column-color > span {font-size: 1.4rem; font-family: monospace; background: white;}
          .flow {
            --flow-space: 1.4em;
          }
          .flow > * + * {
            margin-top: var(--flow-space);
          }
          .with-sidebar {
            display: flex;
            flex-wrap: wrap;
            gap: var(--s1);
          }

            .with-sidebar .sidebar {
            flex-grow: 1;
          }

          .with-sidebar .main {
            flex-basis: 0;
            flex-grow: 999;
            min-inline-size: 50%;
          }
    body
        .u-container.flow.limit-p
            h1 Static binaries
            p If you consider adopting a programming language, consider one where you can create statically-linked executables. This makes things so much easier.

            hr

            h2 E.g., compared to Docker

            p With a statically-linked binary, provisioning a program on a remote host is just uploading it. With Docker, you need to install and maintain docker-engine. Ideally you should have a nice way to provision the remote host with Docker, but then, why not use that nice way to provision other stuff directly ?

            p Docker is much more than packaging, but it seems a lot of people use it for that purpose.

            p By the way, statically-linked executables make building Docker images a breeze.

            p If you use Docker to deploy, you probably want a private registry, which is another piece to maintain. Static binaries are trivial to host on a static site. Or to mirror. And so on. Simplicity goes a long way.

            hr.u-spacer-bottom-xxl

            p See also: <a>In praise of simplicity</a>

            hr.u-spacer-bottom-xxl

            p Related: <a>Learn packaging</a>
        .u-container
            .with-sidebar
                .main
                    p Xxx.
                .sidebar
                    div(style='width: 8em;')
                        p Xxx.
            .u-grid
                div(style='height: 1em; background-color: red;')
                div(style='height: 1em; background-color: blue;')

        .u-container.c-content.flow
            h1 I am a heading
            h2 I am a heading
            h3 I am a heading
            h4 I am a heading
            p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
            p
                small Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

        .u-container
            h1 Type scale B
            p This is the <code>.c-content</code> type scale. TODO We need another one for <code>.c-text</code> (i.e. in the application context).
        .u-container
            .label-step xxrem/xxpx
            .u-step-b-5 Step 5
            .label-step xxrem/xxpx
            .u-step-b-4 Step 4
            .label-step xxrem/xxpx
            .u-step-b-3 Step 3
            .label-step xxrem/xxpx
            .u-step-b-2 Step 2
            .label-step xxrem/xxpx
            .u-step-b-1 Step 1
            .label-step xxrem/xxpx
            .u-step-b-0 Step 0
            .label-step xxrem/xxpx
            .u-step-b--1 Step -1
            .label-step xxrem/xxpx
            .u-step-b--2 Step -2

        .u-container
            h1 Type scale C
            p This is the <code>.c-content</code> type scale. TODO We need another one for <code>.c-text</code> (i.e. in the application context).
        .u-container
            .label-step xxrem/xxpx
            .u-step-c-5 Step 5
            .label-step xxrem/xxpx
            h1 Step 4
            .label-step xxrem/xxpx
            h2 Step 3
            .label-step xxrem/xxpx
            h3 Step 2
            .label-step xxrem/xxpx
            h4 Step 1
            .label-step xxrem/xxpx
            p Step 0
            .label-step xxrem/xxpx
            .u-step-c--1 Step -1
            .label-step xxrem/xxpx
            .u-step-c--2 Step -2
        .u-container
            h1 Spacing
            p TODO This needs some automated code generation (to generate the right values as above).
            h1 Grid
            p The grid has 12 columns. The outer gap are not part of the grid; they come from the surrounding <code>.u-container</code>.
        .u-container.debug-gap-color
            .u-grid.u-grid--full-height.debug-column-color
                span Col. 1
                span Col. 2
                span Col. 3
                span Col. 4
                span Col. 5
                span Col. 6
                span Col. 7
                span Col. 8
                span Col. 9
                span Col. 10
                span Col. 11
                span Col. 12
